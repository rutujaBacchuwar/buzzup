version: '2.1'

services:


  api-gateway:

   build: zuul-apigateway/

   depends_on:

    eureka-server:

     condition: service_healthy

   restart: always

   network_mode: "host"

   image: demo-zuul-service

   hostname: localhost

   ports:

    - 8092:8092

   healthcheck:

    test: "exit 0"





  eureka-server:

   build: eureka-server/

   restart: always

   network_mode: "host"

   image: demo-eureka-service

   depends_on:

    config-service:

     condition: service_healthy

   hostname: localhost

   ports:

    - 9090:9090

   healthcheck:

    test: "exit 0"





  userprofile:

   build: user-profile/

   restart: always

   network_mode: host

   container_name: userprofile

   depends_on:

    mongo:
     condition: service_started
    eureka-server:
     condition: service_started
    api-gateway:
     condition: service_started
    config-service:
     condition: service_started
    kafka:
     condition: service_started

   ports:

    - 8040:8040

   healthcheck:

    test: "exit 0"





  config-service:

   build: config-service/

   image: config-server

   container_name: config-server

   restart: always

   

   network_mode: "host"

   hostname: localhost

   ports:

    - 8891:8891

   healthcheck:

    test: "exit 0"

  mongo:

   image: mongo

   network_mode: host

   container_name: spring-mongo

   ports:

    - 27017:27017

   volumes:

    - /usr/src/home:/data/db
   healthcheck:
    test: "exit 0"




  zookeeper:
   image: wurstmeister/zookeeper
   ports:
    - "2181:2181"
   network_mode: "host"
   hostname: localhost
   restart: always
   healthcheck:
    test: "exit 0"

  kafka:
   image: wurstmeister/kafka
   ports:
    - "9092:9092"
   environment:
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
   network_mode: "host"
   hostname: localhost
   depends_on:
    zookeeper:
     condition: service_healthy      
   restart: always
   healthcheck:
    test: "exit 0"

