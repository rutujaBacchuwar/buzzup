version: '2.1'

services:



  api-gateway:

   build: zuul-apigateway/

   depends_on:

    eureka-server:

     condition: service_healthy

   restart: always

   network_mode: "host"

   image: demo-zuul-service

   hostname: localhost

   ports:

    - 8092:8092

   healthcheck:

    test: "exit 0"





  eureka-server:

   build: eureka-server/

   restart: always

   network_mode: "host"
   depends_on:
    config-service:

     condition: service_healthy

   image: demo-eureka-service

   hostname: localhost

   ports:

    - 9090:9090

   healthcheck:

    test: "exit 0"





  userprofile:

   build: user-profile/

   restart: always

   network_mode: host

   container_name: userprofile

   depends_on:

    mongo:
     condition: service_healthy
    eureka-server:
     condition: service_healthy
    api-gateway:
     condition: service_healthy
    config-service:
     condition: service_healthy
    kafka:
     condition: service_healthy

   ports:

    - 8040:8040

   healthcheck:

    test: "exit 0"





  config-service:

   build: config-service/

   image: config-server

   container_name: config-server

   restart: always

   

   network_mode: "host"

   hostname: localhost

   ports:

    - 8891:8891

   healthcheck:

    test: "exit 0"






  screening:

   build: movie-schedule/

   restart: always

   network_mode: host

   container_name: screening

   depends_on:

    mongo:
     condition: service_healthy
    eureka-server:
     condition: service_healthy
    api-gateway:
     condition: service_healthy
    config-service:
     condition: service_healthy
    kafka:
     condition: service_healthy

   ports:

    - 8030:8030

   healthcheck:

    test: "exit 0"




  theatre:

   build: theatre-registration/

   restart: always

   network_mode: host

   container_name: theatre

   depends_on:

    mongo:
     condition: service_healthy
    eureka-server:
     condition: service_healthy
    api-gateway:
     condition: service_healthy
    config-service:
     condition: service_healthy
    kafka:
     condition: service_healthy

   ports:

    - 8020:8020

   healthcheck:

    test: "exit 0"




  login:
   
   build: login-authentication/
   restart: always

   network_mode: "host"
   hostname: localhost
   ports:
    - 8070:8070
   container_name: auth
   depends_on:
    
    mysql:
     condition: service_started
    eureka-server:

     condition: service_healthy
    api-gateway:

     condition: service_healthy
    kafka:
     condition: service_healthy
   healthcheck:
    test: "exit 0"




  distributor:
   
   build: distributor/

   restart: always

   network_mode: "host"

   hostname: localhost

   ports:
    - 8010:8010

   container_name: distributor

   depends_on:    
    mongo:
     condition: service_healthy
    eureka-server:
     condition: service_healthy
    api-gateway:
     condition: service_healthy
    config-service:
     condition: service_healthy

   healthcheck:
    test: "exit 0"


  recommendations:
   
   build: recommendation/

   restart: always

   network_mode: "host"
   hostname: localhost
   ports:
    - 8050:8050
   container_name: recommendations
   depends_on:
    
    
    neo4j:
     condition: service_healthy
    eureka-server:
     condition: service_healthy
    api-gateway:
     condition: service_healthy
    config-service:
     condition: service_healthy
    kafka:
     condition: service_healthy
   healthcheck:
    test: "exit 0"

  search:
   
   build: movie-search/
   restart: always

   network_mode: "host"
   hostname: localhost
   ports:
    - 8060:8060
   container_name: search
   depends_on:
    
    mongo:
     condition: service_healthy
    eureka-server:
     condition: service_healthy
    api-gateway:
     condition: service_healthy
    config-service:
     condition: service_healthy
    kafka:
     condition: service_healthy
   healthcheck:
    test: "exit 0"


 


  mysql:
   image: mysql:5.7
   ports:
      - 3306:3306
   container_name: mysql
   mem_limit: 2g
   environment: 
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=juggler_db
    - MYSQL_PASSWORD=root
    - MYSQL_USER=root

   network_mode: "host"
   hostname: localhost
   restart: always
   healthcheck:
    test: "exit 0"




  mongo:

   image: mongo

   network_mode: host

   container_name: spring-mongo

   ports:

    - 27017:27017

   volumes:

    - /usr/src/home:/data/db
   healthcheck:
    test: "exit 0"


  neo4j:
   image: neo4j:latest
   ports:
    - "7474:7474"
    - "7687:7687"
   environment:
    
    - NEO4J_apoc_import_file_enabled=true
    - NEO4J_dbms_shell_enabled=true
   healthcheck:
    test: "exit 0"





  juggler-front-end:

   image: viship/juggler:1.0.0

   container_name: juggler-front-end

   ports:
    - 4200:4200
   healthcheck:
    test: "exit 0"

  zookeeper:
   image: wurstmeister/zookeeper
   ports:
    - "2181:2181"
   network_mode: "host"
   hostname: localhost
   restart: always
   healthcheck:
    test: "exit 0"

  kafka:
   image: wurstmeister/kafka
   ports:
    - "9092:9092"
   environment:
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
   network_mode: "host"
   hostname: localhost
   depends_on:
    zookeeper:
     condition: service_healthy      
   restart: always
   healthcheck:
    test: "exit 0"

