version: '2.1'

services:

#Governing microservices
  api-gateway:
   build: zuul-apigateway/
   depends_on:
    eureka-server:
     condition: service_healthy
   restart: always
   network_mode: "host"
   image: demo-zuul-service
   hostname: localhost
   ports:
    - 9085:9085
   healthcheck:
    test: "exit 0"

  eureka-server:
   build: eureka-server/
   restart: always
   network_mode: "host"
   image: demo-eureka-service
   hostname: localhost
   ports:
    - 9083:9083
   healthcheck:
    test: "exit 0"

  config-service:
   build: config-service/
   image: config-server
   container_name: config-server
   restart: always
   depends_on:
    eureka-server:
     condition: service_healthy
   network_mode: "host"
   hostname: localhost
   ports:
    - 9084:9084
   healthcheck:
    test: "exit 0"


# RSVP MICROSERVICE
  rsvp:
   build: rsvp/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9075:9075
   container_name: rsvp
   healthcheck:
    test: "exit 0"

#EMAIL MICROSERVICE
  email:
   build: emailservice/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9076:9076
   container_name: email
   healthcheck:
    test: "exit 0"

#USER PROFILE MICROSERVICE
  userprofile:
   build: user-profile/
   restart: always
   network_mode: host
   container_name: userprofile
   ports:
    - 9073:9073
   healthcheck:
    test: "exit 0"

#SCREENING MICROSERVICE
  screening:
   build: movie-schedule/
   restart: always
   network_mode: host
   container_name: screening
   ports:
    - 9072:9072
   healthcheck:
    test: "exit 0"

#THEATRE MICROSERVICE
  theatre:
   build: theatre-registration/
   restart: always
   network_mode: host
   container_name: theatre
   ports:
    - 9071:9071
   healthcheck:
    test: "exit 0"

#LOGIN MICROSERVICE
  login:   
   build: login-authentication/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9074:9074
   container_name: auth
   healthcheck:
    test: "exit 0"

#PROMOCODE MICROSERVICE
  promocode:   
   build: promocodes/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9080:9080
   container_name: promocode
   healthcheck:
    test: "exit 0"

#PAYMENT MICROSERVICE
  payment:   
   build: payment/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9081:9081
   container_name: payment
   healthcheck:
    test: "exit 0"

#BOOKING MICROSERVICE
  booking:   
   build: ticket-engine/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9079:9079
   container_name: booking
   healthcheck:
    test: "exit 0"

#DISTRIBUTOR MICROSERVICE
  distributor:   
   build: distributor/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9070:9070
   container_name: distributor
   healthcheck:
    test: "exit 0"

#RECOMMENDATIONS MICROSERVICE
  recommendations:
   build: recommendation/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9078:9078
   container_name: recommendations
   healthcheck:
    test: "exit 0"

#SEARCH MICROSERVICE
  search:
   build: movie-search/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9077:9077
   container_name: search

   healthcheck:
    test: "exit 0"
    
#SHOW SCHEDULER
  scheduler:
   build: show-sheduler/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 9082:9082
   container_name: scheduler
   healthcheck:
    test: "exit 0"

#MYSQL DATABASE
  mysql:
   image: mysql:5.7
   ports:
      - 3306:3306
   container_name: mysql
   mem_limit: 2g
   environment: 
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=juggler_db
    - MYSQL_PASSWORD=root
    - MYSQL_USER=root
   network_mode: "host"
   hostname: localhost
   restart: always
   healthcheck:
    test: "exit 0"

#MONGO DATABASE
  mongo:
   image: mongo
   network_mode: host
   container_name: spring-mongo
   ports:
    - 27017:27017
   volumes:
    - /usr/src/home:/data/db
   healthcheck:
    test: "exit 0"

#NEO4J DATABASE
  neo4j:
   image: neo4j:latest
   ports:
    - "7474:7474"
    - "7687:7687"
   environment:
    
    - NEO4J_apoc_import_file_enabled=true
    - NEO4J_dbms_shell_enabled=true
   healthcheck:
    test: "exit 0"
    
#REDIS DATABASE
  redis:
   container_name: redis
   image: redis
   ports:
    - "6379:6379"
   command: redis-server --appendonly yes
   volumes:
    - ../data/redis:/data
   restart: always
   healthcheck:
    test: "exit 0"

#FRONT END
  juggler-front-end:
   build: Juggler-Front-End/
   image: juggler-front-end
   container_name: juggler-front-end
   network_mode: "host"
   hostname: localhost
   ports:
    - 4200:4200
   restart: always
   healthcheck:
    test: "exit 0"

#ZOOKEEPER MESSAFEBROKER
  zookeeper:
   image: wurstmeister/zookeeper
   ports:
    - "2181:2181"
   network_mode: "host"
   hostname: localhost
   restart: always
   healthcheck:
    test: "exit 0"

#KAFKA MESSAGING
  kafka:
   image: wurstmeister/kafka
   ports:
    - "9092:9092"
   environment:
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.20.1.16:9092
    KAFKA_LISTENERS: PLAINTEXT://10.20.1.16:9092
    KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
   network_mode: "host"
   hostname: localhost
   depends_on:
    zookeeper:
     condition: service_healthy      
   restart: always
   healthcheck:
    test: "exit 0"

#CHECKING
  prometheus:
   image: prom/prometheus
   container_name: prometheus
   network_mode: "host" 
   hostname: localhost
   ports:
    - 9087:9090
   volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
   command:
    - '--config.file=/etc/prometheus/prometheus.yml'
   restart: always
   healthcheck:
    test: "exit 0"

#CHECKING
  grafana:
   image: grafana/grafana
   container_name: grafana
   network_mode: "host"
   hostname: localhost
   ports:
    - 9086:3000
   volumes:
    - /var/lib/grafana
   environment:
    - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - GF_USERS_ALLOW_SIGN_UP=false
   restart: always
   healthcheck:
    test: "exit 0"

