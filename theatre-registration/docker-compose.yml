version: '3'

services:

  api-gateway:
   build: zuul-apigateway/
   depends-on:
    - eureka-server
   restart: always
   network_mode: "host"
   image: demo-zuul-service
   hostname: localhost
   ports:
    - 8092:8092

  eureka-server:
   build: eureka-server/
   restart: always
   network_mode: "host"
   depends-on:
    - config-service
   image: demo-eureka-service
   hostname: localhost
   ports:
    - 9090:9090

  userprofile:
   build: user-profile/
   restart: always
   network_mode: host
   container_name: userprofile
   depends-on:
    - mongo
    - eureka-server
    - api-gateway
    - config-service
    - kafka
   ports:
    - 8040:8040

  config-service:
   build: config-service/
   image: config-server
   container_name: config-server
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 8891:8891

  screening:
   build: movie-schedule/
   restart: always
   network_mode: host
   container_name: screening
   depends-on:
    - mongo
    - eureka-server
    - api-gateway
    - config-service
    - kafka
   ports:
    - 8030:8030

  theatre:
   build: theatre-registration/
   restart: always
   network_mode: host
   container_name: theatre
   depends-on:
    - mongo
    - eureka-server
    - api-gateway
    - config-service
    - kafka
   ports:
    - 8020:8020

  login:   
   build: login-authentication/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 8070:8070
   container_name: auth
   depends-on:
    - mysql
    - eureka-server
    - api-gateway
    - config-service
    - kafka

  distributor:   
   build: distributor/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 8010:8010
   container_name: distributor
   depends-on:    
    - mongo
    - eureka-server
    - api-gateway
    - config-service
    - kafka

  recommendations:   
   build: recommendation/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 8050:8050
   container_name: recommendations
   depends-on:
    - neo4j
    - eureka-server
    - api-gateway
    - config-service
    - kafka

  search:   
   build: movie-search/
   restart: always
   network_mode: "host"
   hostname: localhost
   ports:
    - 8060:8060
   container_name: search
   depends_on:
    - mongo
    - eureka-server
    - api-gateway
    - config-service
    - kafka

  mysql:
   image: mysql:5.7
   ports:
      - 3306:3306
   container_name: mysql   
   environment: 
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=juggler_db
    - MYSQL_PASSWORD=root
    - MYSQL_USER=root
   network_mode: "host"
   hostname: localhost
   restart: always

  mongo:
   image: mongo
   network_mode: host
   container_name: spring-mongo
   ports:
    - 27017:27017
   volumes:
    - /usr/src/home:/data/db

  neo4j:
   image: neo4j:latest
   ports:
    - "7474:7474"
    - "7687:7687"
   environment:    
    - NEO4J_apoc_import_file_enabled=true
    - NEO4J_dbms_shell_enabled=true

  juggler-front-end:
   image: viship/juggler:1.0.0
   container_name: juggler-front-end
   ports:
    - 4200:4200

  zookeeper:
   image: wurstmeister/zookeeper
   ports:
    - "2181:2181"
   network_mode: "host"
   hostname: localhost
   restart: always


  kafka:
   image: wurstmeister/kafka
   ports:
    - "9092:9092"
   environment:
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
   network_mode: "host"
   hostname: localhost
   depends-on:
    - zookeeper
   restart: always
